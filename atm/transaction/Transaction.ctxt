#BlueJ class context
comment0.target=Transaction
comment0.text=\ Abstract\ base\ class\ for\ classes\ representing\ the\ various\ kinds\ of\r\n\ \ transaction\ the\ ATM\ can\ perform\r\n
comment1.params=atm\ session\ card\ pin
comment1.target=Transaction(atm.ATM,\ atm.Session,\ banking.Card,\ int)
comment1.text=\ Constructor\r\n\r\n\ \ @param\ atm\ the\ ATM\ used\ to\ communicate\ with\ customer\r\n\ \ @param\ session\ the\ session\ in\ which\ this\ transaction\ is\ being\ performed\r\n\ \ @param\ card\ the\ customer's\ card\r\n\ \ @param\ pin\ the\ PIN\ entered\ by\ the\ customer\r\n
comment2.params=atm\ session\ card\ pin
comment2.target=Transaction\ makeTransaction(atm.ATM,\ atm.Session,\ banking.Card,\ int)
comment2.text=\ Create\ a\ transaction\ of\ an\ appropriate\ type\ by\ asking\ the\ customer\r\n\ \ what\ type\ of\ transaction\ is\ desired\ and\ then\ returning\ a\ newly-created\r\n\ \ member\ of\ the\ appropriate\ subclass\r\n\r\n\ \ @param\ atm\ the\ ATM\ used\ to\ communicate\ with\ customer\r\n\ \ @param\ session\ the\ session\ in\ which\ this\ transaction\ is\ being\ performed\r\n\ \ @param\ card\ the\ customer's\ card\r\n\ \ @param\ pin\ the\ PIN\ entered\ by\ the\ customer\r\n\ \ @return\ a\ newly\ created\ Transaction\ object\ of\ the\ appropriate\ type\r\n\ \ @exception\ CustomerConsole.Cancelled\ if\ the\ customer\ presses\ cancel\ instead\r\n\ \ \ \ \ \ \ \ \ of\ choosing\ a\ transaction\ type\r\n
comment3.params=
comment3.target=boolean\ performTransaction()
comment3.text=\ Peform\ a\ transaction.\ \ This\ method\ depends\ on\ the\ three\ abstract\ methods\r\n\ \ that\ follow\ to\ perform\ the\ operations\ unique\ to\ each\ type\ of\ transaction\r\n\ \ in\ the\ appropriate\ way.\r\n\r\n\ \ @return\ true\ if\ customer\ indicates\ a\ desire\ to\ do\ another\ transaction;\r\n\ \ \ \ \ \ \ \ \ \ false\ if\ customer\ does\ not\ desire\ to\ do\ another\ transaction\r\n\ \ @exception\ CardRetained\ if\ card\ was\ retained\ due\ to\ too\ many\ invalid\ PIN's\r\n
comment4.params=
comment4.target=banking.Status\ performInvalidPINExtension()
comment4.text=\ Perform\ the\ Invalid\ PIN\ Extension\ -\ reset\ session\ pin\ to\ new\ value\ if\ successful\r\n\r\n\ \ @return\ status\ code\ returned\ by\ bank\ from\ most\ recent\ re-submission\r\n\ \ \ \ \ \ \ \ \ \ of\ transaction\r\n\ \ @exception\ CustomerConsole.Cancelled\ if\ customer\ presses\ the\ CANCEL\ key\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ instead\ of\ re-entering\ PIN\r\n\ \ @exception\ CardRetained\ if\ card\ was\ retained\ due\ to\ too\ many\ invalid\ PIN's\r\n
comment5.params=
comment5.target=int\ getSerialNumber()
comment5.text=\ Get\ serial\ number\ of\ this\ transaction\r\n\r\n\ \ @return\ serial\ number\r\n
comment6.params=
comment6.target=banking.Message\ getSpecificsFromCustomer()
comment6.text=\ Get\ specifics\ for\ the\ transaction\ from\ the\ customer\ -\ each\r\n\ \ subclass\ must\ implement\ this\ appropriately.\r\n\r\n\ \ @return\ message\ to\ bank\ for\ initiating\ this\ transaction\r\n\ \ @exception\ CustomerConsole.Cancelled\ if\ customer\ cancelled\ this\ transaction\r\n
comment7.params=
comment7.target=banking.Receipt\ completeTransaction()
comment7.text=\ Complete\ an\ approved\ transaction\ \ -\ each\ subclass\ must\ implement\r\n\ \ this\ appropriately.\r\n\r\n\ \ @return\ receipt\ to\ be\ printed\ for\ this\ transaction\r\n\ \ @exception\ CustomerConsole.Cancelled\ if\ customer\ cancelled\ this\ transaction\r\n
numComments=8
