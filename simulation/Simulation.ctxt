#BlueJ class context
comment0.params=atm
comment0.target=Simulation(atm.ATM)
comment1.params=
comment1.target=Simulation\ getInstance()
comment1.text=\ Accessor\ for\ the\ one\ and\ only\ instance\ of\ this\ class\n\n\ \ @return\ the\ instance\ of\ this\ class\n
comment10.params=
comment10.target=boolean\ acceptEnvelope()
comment10.text=\ Simulate\ accepting\ an\ envelope\ from\ customer.\n\n\ \ return\ true\ if\ an\ envelope\ was\ received\ within\ the\ prescribed\ time,\n\ \ \ \ \ \ \ \ \ else\ false\n
comment11.params=text
comment11.target=void\ printReceiptLine(java.lang.String)
comment11.text=\ Simulate\ printing\ one\ line\ of\ a\ receipt\n\n\ \ @param\ text\ the\ line\ to\ print\n
comment12.params=text
comment12.target=void\ printLogLine(java.lang.String)
comment12.text=\ Simulate\ printing\ a\ line\ to\ the\ log\n\n\ \ @param\ text\ the\ line\ to\ print\n
comment13.params=message\ balances
comment13.target=banking.Status\ sendMessage(banking.Message,\ banking.Balances)
comment13.text=\ Simulate\ sending\ a\ message\ to\ bank\n\n\ \ @param\ message\ the\ message\ to\ send\n\ \ @param\ balances\ (out)\ balances\ in\ customer's\ account\ as\ reported\n\ \ \ \ \ \ \ \ \ by\ bank\n\ \ @return\ status\ code\ returned\ by\ bank\n
comment14.params=on
comment14.target=void\ switchChanged(boolean)
comment14.text=\ Notify\ the\ ATM\ that\ the\ state\ of\ the\ on-off\ switch\ has\ been\ changed\n\n\ \ @param\ on\ true\ if\ state\ is\ now\ "on",\ false\ if\ it\ is\ "off"\n
comment15.params=
comment15.target=void\ cardInserted()
comment15.text=\ Notify\ ATM\ that\ a\ card\ has\ been\ inserted\n
comment16.params=
comment16.target=GUI\ getGUI()
comment16.text=\ Accessor\ for\ GUI\ Panel\ that\ simulates\ the\ ATM\n\n\ \ @return\ the\ GUI\ Panel\n
comment17.params=
comment17.target=SimulatedBank\ getSimulatedBank()
comment17.text=\ Accessor\ for\ simulated\ bank\n\n\ \ @return\ simulated\ bank\n
comment2.params=
comment2.target=banking.Money\ getInitialCash()
comment2.text=\ Simulated\ getting\ initial\ amount\ of\ cash\ from\ operator\n\n\ \ @return\ value\ of\ initial\ cash\ entered\n
comment3.params=
comment3.target=banking.Card\ readCard()
comment3.text=\ Simulate\ reading\ of\ a\ card\n\n\n\ \ @return\ Card\ object\ representing\ information\ on\ the\ card\ if\ read\n\ \ \ \ \ \ \ \ \ \ successfully,\ null\ if\ not\ read\ successfully\n
comment4.params=
comment4.target=void\ ejectCard()
comment4.text=\ Simulate\ ejecting\ a\ card\ \n
comment5.params=
comment5.target=void\ retainCard()
comment5.text=\ Simulate\ retaining\ a\ card\n
comment6.params=
comment6.target=void\ clearDisplay()
comment6.text=\ Clear\ the\ simulated\ display\n
comment7.params=text
comment7.target=void\ display(java.lang.String)
comment7.text=\ Write\ one\ or\ more\ lines\ to\ the\ display\ -\ beginning\ just\ after\ the\n\ \ last\ line\ written\n\n\ \ @param\ text\ the\ text\ to\ display\n
comment8.params=mode\ maxValue
comment8.target=java.lang.String\ readInput(int,\ int)
comment8.text=\ Simulate\ reading\ input\ from\ the\ keyboard\n\n\ \ @param\ mode\ the\ input\ mode\ to\ use\ -\ one\ of\ the\ constants\ defined\ below.\n\ \ @param\ maxValue\ the\ maximum\ acceptable\ value\ (used\ in\ MENU_MODE\ only)\n\ \ @return\ the\ line\ that\ was\ entered\ -\ null\ if\ user\ pressed\ CANCEL.\n
comment9.params=amount
comment9.target=void\ dispenseCash(banking.Money)
comment9.text=\ Simulate\ dispensing\ cash\ to\ a\ customer\n\n\ \ @param\ amount\ the\ amount\ of\ cash\ to\ dispense\n\n\ \ Precondition\:\ amount\ is\ <\=\ cash\ on\ hand\n
numComments=18
